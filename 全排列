class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
        ans = []
        # path = []
        # def backtrack(i, s):
        #     if i==len(nums):
        #         ans.append(path.copy())
        #         return
        #     for j in s:
        #         path.append(j)
        #         backtrack(i+1, s-{j})
        #         path.pop()
        # backtrack(0, set(nums))
        def backtrack(i):
            if i==len(nums):
                ans.append(nums[:])
                return 
            for j in range(i, len(nums)):
                nums[j], nums[i] = nums[i], nums[j]
                backtrack(i+1)
                nums[j], nums[i] = nums[i], nums[j]
        backtrack(0)
        return ans
