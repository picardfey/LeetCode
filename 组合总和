class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        ans = []
        path = []
        def backtrack(i, s):
            if s==target: 
                ans.append(path.copy())
                return
            if i==len(candidates) or s>target: return
            backtrack(i+1, s)
            path.append(candidates[i])
            backtrack(i, s+candidates[i])
            path.pop()
        backtrack(0, 0)
        return ans
