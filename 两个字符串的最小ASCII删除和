class Solution:
    def minimumDeleteSum(self, s1: str, s2: str) -> int:
        # 寻回删除的路径？当然不用了
        m, n = len(s1), len(s2)
        dp = [[0] * (n + 1) for _ in range(m + 1)]
        for i in range(1, m + 1):
            dp[i][0] = dp[i - 1][0] + ord(s1[i - 1])
        for j in range(1, n + 1):
            dp[0][j] = dp[0][j - 1] + ord(s2[j - 1])

        for i, x in enumerate(s1):
            for j, y in enumerate(s2):
                if x==y: dp[i+1][j+1] = dp[i][j]
                else: dp[i+1][j+1] = min(dp[i][j+1]+ord(x), dp[i+1][j]+ord(y), )
        return dp[-1][-1]
